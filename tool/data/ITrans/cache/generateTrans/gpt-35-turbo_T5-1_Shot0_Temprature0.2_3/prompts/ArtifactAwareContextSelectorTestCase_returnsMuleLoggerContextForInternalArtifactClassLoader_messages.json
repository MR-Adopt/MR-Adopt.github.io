[
    {
        "role": "system",
        "content": "As an expert in Java programming, you excel at understanding the intentions behind code and developing functions that convert provided inputs into desired outputs.\nIn metamorphic testing, input transformation functions are crafted to automatically generate additional test inputs (denoted as 'FOLLOW UP INPUT') from initial test inputs (denoted as 'SOURCE INPUT') based on defined metamorphic relations (MRs).\n\nGiven the program under test (denoted as 'METHOD UNDER TEST'), an MR-encoded test case (denoted as 'TEST CASE'),\nand additional pairs of 'SOURCE INPUT' and 'FOLLOW UP INPUT' (denoted as 'OTHER INPUT PAIRS'),\\\nyour task is to analyze the program under test and the provided test case, deduce the relationship between 'SOURCE INPUT' and 'FOLLOW UP INPUT' in the test case, and create a function that transforms 'SOURCE INPUT' into 'FOLLOW UP INPUT'.\n\nThe deduced relation and generated transformation function should be applicable to addtional input pairs and other potentail input pairs with similar characteristics.\nConsidering potential input pairs with boundary values as well.\n"
    },
    {
        "role": "user",
        "content": "# METHOD UNDER TEST\n```java\n@Override\npublic LoggerContext getContext(String fqcn, ClassLoader classLoader, boolean currentContext, URI configLocation) {\n    return cache.getLoggerContext(resolveLoggerContextClassLoader(classLoader));\n}\n\n```\n\n\n# TEST CASE\n```java\n@Test\npublic void returnsMuleLoggerContextForInternalArtifactClassLoader() {\n    String fqcn = \"\";\n    boolean currentContext = true;\n    ClassLoader systemLoader = this.getClass().getClassLoader();\n    String fqcn2 = \"\";\n    boolean currentContext2 = true;\n    ArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], this.getClass().getClassLoader(), mock(ClassLoaderLookupPolicy.class));\n    ClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n    LoggerContext systemContext = selector.getContext(fqcn, systemLoader, currentContext);\n    LoggerContext serviceCtx = selector.getContext(fqcn2, serviceLoader, currentContext2);\n    assertThat(serviceCtx, sameInstance(systemContext));\n}\n\n```\nSOURCE INPUT: `fqcn`,`currentContext`,`systemLoader`\nFOLLOW UP INPUT: `fqcn2`,`serviceLoader`,`currentContext2`\n\n\n# OTHER INPUT PAIRS \n## Input pair1:\n```java\nString fqcn = \"\";\nboolean currentContext = true;\nClassLoader systemLoader = this.getClass().getClassLoader();\nString fqcn2 = \"\";\nboolean currentContext2 = true;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], this.getClass().getClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair2:\n```java\nString fqcn = \"com.example.MyClass\";\nboolean currentContext = true;\nClassLoader systemLoader = this.getClass().getClassLoader();\nString fqcn2 = \"com.example.MyClass\";\nboolean currentContext2 = true;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], this.getClass().getClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair3:\n```java\nString fqcn = \"org.apache.commons.logging.Log\";\nboolean currentContext = false;\nClassLoader systemLoader = this.getClass().getClassLoader();\nString fqcn2 = \"org.apache.commons.logging.Log\";\nboolean currentContext2 = false;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], this.getClass().getClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair4:\n```java\nString fqcn = \"com.example.MyClass\";\nboolean currentContext = true;\nClassLoader systemLoader = Thread.currentThread().getContextClassLoader();\nString fqcn2 = \"com.example.MyClass\";\nboolean currentContext2 = true;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], this.getClass().getClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair5:\n```java\nString fqcn = \"com.example.MyClass\";\nboolean currentContext = false;\nClassLoader systemLoader = ClassLoader.getSystemClassLoader();\nString fqcn2 = \"com.example.MyClass\";\nboolean currentContext2 = false;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], this.getClass().getClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair6:\n```java\nString fqcn = \"com.example.MyClass\";\nboolean currentContext = true;\nClassLoader systemLoader = null;\nString fqcn2 = \"com.example.MyClass\";\nboolean currentContext2 = true;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], this.getClass().getClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair7:\n```java\nString fqcn = \"\";\nboolean currentContext = false;\nClassLoader systemLoader = this.getClass().getClassLoader().getParent();\nString fqcn2 = \"\";\nboolean currentContext2 = false;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], this.getClass().getClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair8:\n```java\nString fqcn = \"java.util.ArrayList\";\nboolean currentContext = true;\nClassLoader systemLoader = ClassLoader.getSystemClassLoader();\nString fqcn2 = \"java.util.ArrayList\";\nboolean currentContext2 = true;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], ClassLoader.getSystemClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair9:\n```java\nString fqcn = \"com.example.MyClass\";\nboolean currentContext = false;\nClassLoader systemLoader = ClassLoader.getSystemClassLoader();\nString fqcn2 = \"com.example.MyClass\";\nboolean currentContext2 = false;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], ClassLoader.getSystemClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair10:\n```java\nString fqcn = \"org.slf4j.Logger\";\nboolean currentContext = true;\nClassLoader systemLoader = Thread.currentThread().getContextClassLoader();\nString fqcn2 = \"org.slf4j.Logger\";\nboolean currentContext2 = true;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], Thread.currentThread().getContextClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair11:\n```java\nString fqcn = \"java.lang.String\";\nboolean currentContext = true;\nClassLoader systemLoader = ClassLoader.getSystemClassLoader();\nString fqcn2 = \"java.lang.String\";\nboolean currentContext2 = true;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], ClassLoader.getSystemClassLoader(), mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair12:\n```java\nString fqcn = \"org.slf4j.Logger\";\nboolean currentContext = true;\nClassLoader systemLoader = null;\nString fqcn2 = \"org.slf4j.Logger\";\nboolean currentContext2 = true;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], null, mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n## Input pair13:\n```java\nString fqcn = \"\";\nboolean currentContext = false;\nClassLoader systemLoader = null;\nString fqcn2 = \"\";\nboolean currentContext2 = false;\nArtifactClassLoader serviceClassLoader = new MuleArtifactClassLoader(\"test\", new ApplicationDescriptor(\"test\"), new URL[0], null, mock(ClassLoaderLookupPolicy.class));\nClassLoader serviceLoader = serviceClassLoader.getClassLoader();\n```\n\n\n\n# OUTPUT FORMAT\n```java\npublic class ArtifactAwareContextSelectorTestCase_returnsMuleLoggerContextForInternalArtifactClassLoader {\n    public static List<Object> inputTransformation_returnsMuleLoggerContextForInternalArtifactClassLoader(String fqcn, boolean currentContext, ClassLoader systemLoader)  {\n        // TODO\n        String fqcn2 = \n\t\tClassLoader serviceLoader = \n\t\tboolean currentContext2 = \n\t\tList<Object> transformed_inputs = Arrays.asList(fqcn2, serviceLoader, currentContext2);\n\t\treturn transformed_inputs;\n    }\n}\n```\nYour task is to deduce the relationship between 'SOURCE INPUT' and 'FOLLOW UP INPUT' in the test case, and create a function that transforms 'SOURCE INPUT' into 'FOLLOW UP INPUT'.\nThe deduced relation and generated transformation function should be applicable to addtional input pairs and other potentail input pairs with similar characteristics.\nGenerate the transformation function by complementing the above code skeleton in 'OUTPUT FORMAT'."
    }
]