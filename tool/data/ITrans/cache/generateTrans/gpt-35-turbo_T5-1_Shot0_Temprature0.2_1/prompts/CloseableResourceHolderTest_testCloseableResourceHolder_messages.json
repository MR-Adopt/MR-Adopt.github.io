[
    {
        "role": "system",
        "content": "As an expert in Java programming, you excel at understanding the intentions behind code and developing functions that convert provided inputs into desired outputs.\nIn metamorphic testing, input transformation functions are crafted to automatically generate additional test inputs (denoted as 'FOLLOW UP INPUT') from initial test inputs (denoted as 'SOURCE INPUT') based on defined metamorphic relations (MRs).\n\nGiven the program under test (denoted as 'METHOD UNDER TEST'), an MR-encoded test case (denoted as 'TEST CASE'),\nand additional pairs of 'SOURCE INPUT' and 'FOLLOW UP INPUT' (denoted as 'OTHER INPUT PAIRS'),\\\nyour task is to analyze the program under test and the provided test case, deduce the relationship between 'SOURCE INPUT' and 'FOLLOW UP INPUT' in the test case, and create a function that transforms 'SOURCE INPUT' into 'FOLLOW UP INPUT'.\n\nThe deduced relation and generated transformation function should be applicable to addtional input pairs and other potentail input pairs with similar characteristics.\nConsidering potential input pairs with boundary values as well.\n"
    },
    {
        "role": "user",
        "content": "# METHOD UNDER TEST\n```java\nstatic <T extends Closeable> ResourceHolder<T> fromCloseable(final T resource) {\n    return new CloseableResourceHolder<>(resource);\n}\n\nT get();\n\n```\n\n\n# TEST CASE\n```java\n@Test\npublic void testCloseableResourceHolder() {\n    AtomicLong closeCounter = new AtomicLong();\n    Closeable closeable = closeCounter::incrementAndGet;\n    ResourceHolder<Closeable> holder = ResourceHolder.fromCloseable(closeable);\n    ResourceHolder<Closeable> holder2 = new CloseableResourceHolder<Closeable>(closeable);\n    Assert.assertSame(closeable, holder2.get());\n}\n\n```\nSOURCE INPUT: `closeable`\nFOLLOW UP INPUT: `holder2`\n\n\n# OTHER INPUT PAIRS \n\n\n\n# OUTPUT FORMAT\n```java\npublic class CloseableResourceHolderTest_testCloseableResourceHolder {\n    public static ResourceHolder<Closeable> inputTransformation_testCloseableResourceHolder(Closeable closeable)  {\n        // TODO\n        ResourceHolder<Closeable> holder2 = \n\t\treturn holder2;\n    }\n}\n```\nYour task is to deduce the relationship between 'SOURCE INPUT' and 'FOLLOW UP INPUT' in the test case, and create a function that transforms 'SOURCE INPUT' into 'FOLLOW UP INPUT'.\nThe deduced relation and generated transformation function should be applicable to addtional input pairs and other potentail input pairs with similar characteristics.\nGenerate the transformation function by complementing the above code skeleton in 'OUTPUT FORMAT'."
    }
]