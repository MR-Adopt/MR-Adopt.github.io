
Thanks for using JUnit! Support its development at https://junit.org/sponsoring

[36mâ•·[0m
[36mâ”œâ”€[0m [36mJUnit Jupiter[0m [32mâœ”[0m
[36mâ”‚  â””â”€[0m [36mCostTest_testHashCodeAndEqualsTest[0m [32mâœ”[0m
[36mâ”‚     â””â”€[0m [31mtestHashCodeAndEquals_IT()[0m [31mâœ˜[0m [31morg/opentripplanner/framework/model/CostTest_testHashCodeAndEquals[0m
[36mâ”œâ”€[0m [36mJUnit Vintage[0m [32mâœ”[0m
[36mâ””â”€[0m [36mJUnit Platform Suite[0m [32mâœ”[0m

Failures (1):
  JUnit Jupiter:CostTest_testHashCodeAndEqualsTest:testHashCodeAndEquals_IT()
    MethodSource [className = 'org.opentripplanner.framework.model.CostTest_testHashCodeAndEqualsTest', methodName = 'testHashCodeAndEquals_IT', methodParameterTypes = '']
    => java.lang.NoClassDefFoundError: org/opentripplanner/framework/model/CostTest_testHashCodeAndEquals
       org.opentripplanner.framework.model.CostTest_testHashCodeAndEqualsTest.testHashCodeAndEquals_IT(CostTest_testHashCodeAndEqualsTest.java:46)
       java.base/java.lang.reflect.Method.invoke(Method.java:580)
       java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
       java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
     Caused by: java.lang.ClassNotFoundException: org.opentripplanner.framework.model.CostTest_testHashCodeAndEquals
       java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:445)
       java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:593)
       java.base/java.net.FactoryURLClassLoader.loadClass(URLClassLoader.java:872)
       java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:526)
       [...]

Test run finished after 180 ms
[         4 containers found      ]
[         0 containers skipped    ]
[         4 containers started    ]
[         0 containers aborted    ]
[         4 containers successful ]
[         0 containers failed     ]
[         1 tests found           ]
[         0 tests skipped         ]
[         1 tests started         ]
[         0 tests aborted         ]
[         0 tests successful      ]
[         1 tests failed          ]


WARNING: Delegated to the 'execute' command.
         This behaviour has been deprecated and will be removed in a future release.
         Please use the 'execute' command directly.
CMD: cd /ssddata1/cxubl/data/ITrans/projects/opentripplanner__castle__OpenTripPlanner/ ; /ssddata1/cxubl/software/zulu_jdks/zulu21.32.17-ca-jdk21.0.2-linux_x64/bin/java -XX:ActiveProcessorCount=10 -jar /ssddata1/cxubl/software/junit/junit-platform-console-standalone-1.10.0.jar --class-path=./:./target/classes:./target/test-classes:./target/dependency/*:/ssddata1/cxubl/software/junit/junit-4.13.2.jar:/ssddata1/cxubl/software/junit/junit-jupiter-api-5.8.2.jar:/ssddata1/cxubl/software/junit/hamcrest-core-1.3.jar:/ssddata1/cxubl/.m2/repository/org/slf4j/slf4j-api/2.0.0/slf4j-api-2.0.0.jar:/ssddata1/cxubl/.m2/repository/org/apache/logging/log4j/log4j-api/2.1/log4j-api-2.1.jar:/ssddata1/cxubl/.m2/repository/com/google/guava/guava/33.0.0-jre/guava-33.0.0-jre.jar:/ssddata1/cxubl/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.0/jackson-databind-2.4.0.jar:/ssddata1/cxubl/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.1/jackson-core-2.12.1.jar:/ssddata1/cxubl/.m2/repository/org/springframework/spring-test/5.3.26/spring-test-5.3.26.jar:/ssddata1/cxubl/data/ITrans/projects/thingsboard__castle__thingsboard/dao/target/dependency/commons-logging-1.2.jar:/ssddata1/cxubl/.m2/repository/org/springframework/spring-core/5.3.2/spring-core-5.3.26.jar:arex-instrumentation-api/target/dependency/jackson-annotations-2.13.1.jar:arex-instrumentation-api/target/dependency/gson-2.10.1.jar:misc/extra/target/dependency/vecmath-1.5.2.jar:/ssddata1/cxubl/data/ITrans/projects/opentripplanner__castle__OpenTripPlanner/ITrans/processed_GT_only/:/ssddata1/cxubl/data/ITrans/projects/opentripplanner__castle__OpenTripPlanner/ITrans/processed_MTCITrans_only/:/ssddata1/cxubl/data/ITrans/projects/opentripplanner__castle__OpenTripPlanner/ITrans/generated_ITrans/ --select-class=org.opentripplanner.framework.model.CostTest_testHashCodeAndEqualsTest > /ssddata1/cxubl/data/ITrans/cache/generateTrans/gpt-35-turbo_T5-1_Shot0_Temprature0.2_1/exe_result/org.opentripplanner.framework.model.CostTest_testHashCodeAndEqualsTest.log 2>&1
file path: 
/ssddata1/cxubl/data/ITrans/projects/opentripplanner__castle__OpenTripPlanner/ITrans/processed_MTCITrans_only/org/opentripplanner/framework/model/CostTest_testHashCodeAndEqualsTest.java
file content: 
package org.opentripplanner.framework.model;

import org.opentripplanner.framework.model.Cost;
import org.opentripplanner.framework.model.Cost.*;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.opentripplanner.framework.model.Cost.ONE_HOUR_WITH_TRANSIT;

import java.time.Duration;
import java.util.List;
import java.util.stream.Stream;
import org.junit.jupiter.api.Test;

class CostTest_testHashCodeAndEqualsTest {

  public static final int VALUE_SECONDS = 10;
  public Cost subject = Cost.costOfSeconds(VALUE_SECONDS);

//   @Test
//   void testHashCodeAndEquals_h() {
//     Cost subject = Cost.costOfSeconds(10);
//     Cost same = Cost.costOfSeconds(10);
//     assertEquals(subject, same);
//     assertEquals(subject.hashCode(), same.hashCode());
// 
//     Cost other = Cost.costOfSeconds(11);
//     assertNotEquals(subject, other);
//     assertNotEquals(subject.hashCode(), other.hashCode());
//   }
// 
// //   public static Cost inputTransformation_testHashCodeAndEquals(Cost subject) {
// //     Cost other = subject.multiply(1.1);
// //     return other;
// //   }
// // 
  @Test
  void testHashCodeAndEquals_IT() {
    Cost subject = Cost.costOfSeconds(10);
    Cost same = Cost.costOfSeconds(10);
    assertEquals(subject, same);
    assertEquals(subject.hashCode(), same.hashCode());

    Cost other = CostTest_testHashCodeAndEquals.inputTransformation_testHashCodeAndEquals(subject);
    assertNotEquals(subject, other);
    assertNotEquals(subject.hashCode(), other.hashCode());
  }

}
