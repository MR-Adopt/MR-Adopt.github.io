{
    "com.cedarsoftware.util.convert.ConverterTest_testSqlDateToString_h2Test0": {
        "num_of_test_cases": 1602,
        "num_of_passed_test_cases": 16,
        "num_of_assertion_failed_test_cases": 0,
        "num_of_exception_thrown_test_cases": 1586,
        "num_of_reach_assertion_test_cases": -1,
        "assertionLineNums": [],
        "reach_assertion_test_cases_list": [],
        "assertion_failed_test_cases_list": [],
        "exception_thrown_test_cases_list": [
            "toByte_whenEmpty_andNotPrimitive_returnsZero",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToDate",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testInstantToLong",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testBigIntegerToLocalDateTime",
            "testLocalDateTimestampAndBack",
            "testLocalDateTimestampAndBack",
            "testLocalDateTimestampAndBack",
            "toLong_withBooleanParams_returnsCommonValues",
            "toLong_withBooleanParams_returnsCommonValues",
            "toLong_withBooleanParams_returnsCommonValues",
            "toLong_withBooleanParams_returnsCommonValues",
            "toLong_withBooleanParams_returnsCommonValues",
            "toLong_withBooleanParams_returnsCommonValues",
            "testConvertString_withIllegalArguments",
            "testConvertString_withIllegalArguments",
            "testLong_withIllegalArguments",
            "testLong_withIllegalArguments",
            "testLong_withIllegalArguments",
            "testLong_withIllegalArguments",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testInstantToBigInteger",
            "testStringNullAndEmpty",
            "testStringNullAndEmpty",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "testInstantToDouble",
            "toFloat_withBooleanArguments_returnsCommonValue",
            "toFloat_withBooleanArguments_returnsCommonValue",
            "toFloat_withBooleanArguments_returnsCommonValue",
            "toFloat_withBooleanArguments_returnsCommonValue",
            "toFloat_withBooleanArguments_returnsCommonValue",
            "toFloat_withBooleanArguments_returnsCommonValue",
            "toCharacter_whenTrue_withDefaultOptions_returnsCommonValue",
            "toCharacter_whenTrue_withDefaultOptions_returnsCommonValue",
            "toCharacter_whenTrue_withDefaultOptions_returnsCommonValue",
            "testConvertToAtomicLong_whenNullString",
            "toShort_usingPrimitive_withNullAndEmptySource_returnsZero",
            "toShort_usingPrimitive_withNullAndEmptySource_returnsZero",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "toShort_usingPrimitiveClass",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToAtomicLong",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "testInstantToSqlDate",
            "toInt_withIllegalArguments_throwsException",
            "toInt_withIllegalArguments_throwsException",
            "toInt_withIllegalArguments_throwsException",
            "toInt_withIllegalArguments_throwsException",
            "toInt_withIllegalArguments_throwsException",
            "toShort_withIllegalArguments_throwsException",
            "toShort_withIllegalArguments_throwsException",
            "toShort_withIllegalArguments_throwsException",
            "toShort_withIllegalArguments_throwsException",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "testZonedDateTimeToCalendar",
            "toLong_whenNotPrimitive_andNull_returnsNull",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testAtomicLongToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testDateToLocalDateTime",
            "testLocalDateZonedDateTimeAndBack",
            "testLocalDateZonedDateTimeAndBack",
            "testLocalDateZonedDateTimeAndBack",
            "testLocalDateSqlDateAndBack",
            "testLocalDateSqlDateAndBack",
            "testLocalDateSqlDateAndBack",
            "testEpochMilliWithZoneId",
            "testEpochMilliWithZoneId",
            "testEpochMilliWithZoneId",
            "testEpochMilliWithZoneId",
            "testEpochMilliWithZoneId",
            "testEpochMilliWithZoneId",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testLongToLocalDateTime",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testAtomicInteger",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testBigDecimal",
            "testLocalDateTimeToBigDecimal",
            "testLocalDateTimeToBigDecimal",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalDate",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testDateToLocalTime",
            "testConvertToFloat_withIllegalArguments",
            "testConvertToFloat_withIllegalArguments",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toFloat",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "toShort",
            "testDate",
            "testDate",
            "testDate",
            "testDate",
            "testDate",
            "testDate",
            "testDate",
            "toByte_fromBoolean_isSameAsCommonValueObject",
            "toByte_fromBoolean_isSameAsCommonValueObject",
            "toByte_fromBoolean_isSameAsCommonValueObject",
            "toByte_fromBoolean_isSameAsCommonValueObject",
            "toByte_fromBoolean_isSameAsCommonValueObject",
            "toByte_fromBoolean_isSameAsCommonValueObject",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "testInstantToTimestamp",
            "toShort_withBooleanPrams_returnsCommonValue",
            "toShort_withBooleanPrams_returnsCommonValue",
            "toShort_withBooleanPrams_returnsCommonValue",
            "toShort_withBooleanPrams_returnsCommonValue",
            "toShort_withBooleanPrams_returnsCommonValue",
            "toShort_withBooleanPrams_returnsCommonValue",
            "testLocalDateToBigDecimalAndBack",
            "testLocalDateToBigDecimalAndBack",
            "testLocalDateToBigDecimalAndBack",
            "stringToClass",
            "stringToClass",
            "testLocalDateToBigIntegerAndBack",
            "testLocalDateToBigIntegerAndBack",
            "testLocalDateToBigIntegerAndBack",
            "testStringToCharArray",
            "testStringToCharArray",
            "testStringToCharArray",
            "testStringToCharArray",
            "testStringToCharArray",
            "testStringToCharArray",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testInstantToCalendar",
            "testClassesThatReturnZero_whenConvertingFromNull",
            "testClassesThatReturnZero_whenConvertingFromNull",
            "testClassesThatReturnZero_whenConvertingFromNull",
            "testClassesThatReturnZero_whenConvertingFromNull",
            "testClassesThatReturnZero_whenConvertingFromNull",
            "testClassesThatReturnZero_whenConvertingFromNull",
            "testClassesThatReturnZero_whenConvertingFromNull",
            "testConvertTCharacter_withIllegalArguments",
            "testConvertTCharacter_withIllegalArguments",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "toLong_usingPrimitives",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "testZonedDateTimeToLocalDateTime",
            "toInt_whenNotPrimitive_andNullString_returnsNull",
            "toShort_whenNotPrimitive_whenEmptyString_returnsNull",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toByte",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "toLong",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testBigInteger",
            "testAtomicInteger_withBooleanTypes",
            "testAtomicInteger_withBooleanTypes",
            "testAtomicInteger_withBooleanTypes",
            "testAtomicInteger_withBooleanTypes",
            "testAtomicInteger_withBooleanTypes",
            "testAtomicInteger_withBooleanTypes",
            "testLocalDateToLocalTime",
            "testLocalDateToLocalTime",
            "testLocalDateToLocalTime",
            "testLocalDateTimeToBigInteger",
            "testLocalDateTimeToBigInteger",
            "testCalendar_roundTrip_withLocalDate",
            "testCalendar_roundTrip_withLocalDate",
            "testCalendar_roundTrip_withLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalDate",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "testZonedDateTimeToLocalTime",
            "toByte_whenNullOrEmpty_andCovnertingToPrimitive_returnsZero",
            "toByte_whenNullOrEmpty_andCovnertingToPrimitive_returnsZero",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "conversionsWithPrecisionLoss_primitives",
            "testConvertToAtomicLong_whenEmptyString",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testToBoolean_trueCases",
            "testStringDateWithTimeZoneToLocalDateTimeIncludeMillis",
            "testStringDateWithTimeZoneToLocalDateTimeIncludeMillis",
            "testStringDateWithTimeZoneToLocalDateTimeIncludeMillis",
            "testStringDateWithTimeZoneToLocalDateTimeIncludeMillis",
            "testStringDateWithTimeZoneToLocalDateTimeIncludeMillis",
            "testStringDateWithTimeZoneToLocalDateTimeIncludeMillis",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testCalendarToZonedDateTime",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testZonedDateTimeToLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testAtomicLong",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testInstantToLocalDateTime",
            "testLocalDateTimeToAtomicLong",
            "testLocalDateTimeToAtomicLong",
            "testConversions_whenClassTypeMatchesObjectType_stillCreatesNewObject",
            "testConversions_whenClassTypeMatchesObjectType_stillCreatesNewObject",
            "testConversions_whenClassTypeMatchesObjectType_stillCreatesNewObject",
            "testConversions_whenClassTypeMatchesObjectType_stillCreatesNewObject",
            "toInt_fromBoolean_returnsCommonValue",
            "toInt_fromBoolean_returnsCommonValue",
            "toInt_fromBoolean_returnsCommonValue",
            "toInt_fromBoolean_returnsCommonValue",
            "toInt_fromBoolean_returnsCommonValue",
            "toInt_fromBoolean_returnsCommonValue",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "testCalendar_roundTrip",
            "conversionsWithPrecisionLoss_toAtomicLong",
            "conversionsWithPrecisionLoss_toAtomicLong",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testDateToInstant",
            "testStringToByteArray",
            "testStringToByteArray",
            "testStringToByteArray",
            "testStringToByteArray",
            "testStringToByteArray",
            "testStringToByteArray",
            "toShort_withBooleanPrams_usingPrimitive_returnsCommonValue",
            "toShort_withBooleanPrams_usingPrimitive_returnsCommonValue",
            "toShort_withBooleanPrams_usingPrimitive_returnsCommonValue",
            "toShort_withBooleanPrams_usingPrimitive_returnsCommonValue",
            "toShort_withBooleanPrams_usingPrimitive_returnsCommonValue",
            "toShort_withBooleanPrams_usingPrimitive_returnsCommonValue",
            "toCharacter_whenFalse_withDefaultOptions_andObjectType_returnsCommonValue",
            "toCharacter_whenFalse_withDefaultOptions_andObjectType_returnsCommonValue",
            "toCharacter_whenFalse_withDefaultOptions_andObjectType_returnsCommonValue",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "toFloat_objectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testDouble_ObjectType",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testBigInteger_withObjectsShouldBeSameAs",
            "testLocalDateTimeToZonedDateTime",
            "testLocalDateTimeToZonedDateTime",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testCalendarToDouble",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testToBoolean_falseCases",
            "testStringDateWithTimeZoneToLocalDateTimeWithZone",
            "testStringDateWithTimeZoneToLocalDateTimeWithZone",
            "testStringDateWithTimeZoneToLocalDateTimeWithZone",
            "testStringDateWithTimeZoneToLocalDateTimeWithZone",
            "testStringDateWithTimeZoneToLocalDateTimeWithZone",
            "testStringDateWithTimeZoneToLocalDateTimeWithZone",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "testTimestampToLocalDate",
            "toInt_whenNotPrimitive_andEmptyString_returnsZero",
            "testAtomicInteger_withIllegalArguments",
            "testAtomicInteger_withIllegalArguments",
            "testAtomicInteger_withIllegalArguments",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testExtremeDateParams",
            "testLocalDateToDoubleAndBack",
            "testLocalDateToDoubleAndBack",
            "testLocalDateToDoubleAndBack",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "toInt",
            "testConvertToBigDecimal_withIllegalArguments",
            "testConvertToBigDecimal_withIllegalArguments",
            "testConvertToBigDecimal_withIllegalArguments",
            "toCharacter_whenTrue_withDefaultOptions_andObjectType_returnsCommonValue",
            "toCharacter_whenTrue_withDefaultOptions_andObjectType_returnsCommonValue",
            "toCharacter_whenTrue_withDefaultOptions_andObjectType_returnsCommonValue",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "toCharacter_ObjectType",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "testSqlDateToLocalDateTime",
            "toByte_fromBoolean_usingPrimitive_isSameAsCommonValueObject",
            "toByte_fromBoolean_usingPrimitive_isSameAsCommonValueObject",
            "toByte_fromBoolean_usingPrimitive_isSameAsCommonValueObject",
            "toByte_fromBoolean_usingPrimitive_isSameAsCommonValueObject",
            "toByte_fromBoolean_usingPrimitive_isSameAsCommonValueObject",
            "toByte_fromBoolean_usingPrimitive_isSameAsCommonValueObject",
            "toFloat_withBooleanArguments_returnsCommonValueWhenPrimitive",
            "toFloat_withBooleanArguments_returnsCommonValueWhenPrimitive",
            "toFloat_withBooleanArguments_returnsCommonValueWhenPrimitive",
            "toFloat_withBooleanArguments_returnsCommonValueWhenPrimitive",
            "toFloat_withBooleanArguments_returnsCommonValueWhenPrimitive",
            "toFloat_withBooleanArguments_returnsCommonValueWhenPrimitive",
            "testLocalDateTimeToInstant",
            "testLocalDateTimeToInstant",
            "testLocalDateToLocalDateTimeAndBack",
            "testLocalDateToLocalDateTimeAndBack",
            "testLocalDateToLocalDateTimeAndBack",
            "testConvertLocalDateToLongAndBack",
            "testConvertLocalDateToLongAndBack",
            "testConvertLocalDateToLongAndBack",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "testCalendarToBigDecimal",
            "toCharacter_whenFalse_withCustomOptions_returnsTrueCharacter",
            "toCharacter_whenFalse_withCustomOptions_returnsTrueCharacter",
            "toCharacter_whenFalse_withCustomOptions_returnsTrueCharacter",
            "toLong_whenNotPrimitive_andEmptyString_returnsZero",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "testSqlDateToLocalDate",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "toByteUsingPrimitive",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "testLongToInstant",
            "toLong_whenPrimitive_andNullOrEmpty_returnsZero",
            "toLong_whenPrimitive_andNullOrEmpty_returnsZero",
            "testBigDecimal_withObjectsThatShouldBeSameAs",
            "testBigDecimal_withObjectsThatShouldBeSameAs",
            "testBigDecimal_withObjectsThatShouldBeSameAs",
            "testBigDecimal_withObjectsThatShouldBeSameAs",
            "testBigDecimal_withObjectsThatShouldBeSameAs",
            "testBigDecimal_withObjectsThatShouldBeSameAs",
            "testBigDecimal_withObjectsThatShouldBeSameAs",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "testInstantToFloat",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "toCharacter",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testCalendarToLocalDateTime",
            "testConvertToBigInteger_withIllegalArguments",
            "testConvertToBigInteger_withIllegalArguments",
            "testConvertToBigInteger_withIllegalArguments",
            "conversionsWithPrecisionLoss_toAtomicInteger",
            "conversionsWithPrecisionLoss_toAtomicInteger",
            "conversionsWithPrecisionLoss_toAtomicInteger",
            "conversionsWithPrecisionLoss_toAtomicInteger",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testStringParams",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToBigInteger",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalDate",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testCalendarToLocalTime",
            "testStringDateWithNoTimeZoneInformation",
            "testStringDateWithNoTimeZoneInformation",
            "testStringDateWithNoTimeZoneInformation",
            "testStringDateWithNoTimeZoneInformation",
            "testStringDateWithNoTimeZoneInformation",
            "testStringDateWithNoTimeZoneInformation",
            "testConvertTCharacter_withNumberFormatExceptions",
            "testConvertTCharacter_withNumberFormatExceptions",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testTimestampToLocalDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testDateToZonedDateTime",
            "testConversions_whenClassTypeMatchesObjectType_returnsItself",
            "testConversions_whenClassTypeMatchesObjectType_returnsItself",
            "testConversions_whenClassTypeMatchesObjectType_returnsItself",
            "testConversions_whenClassTypeMatchesObjectType_returnsItself",
            "testConversions_whenClassTypeMatchesObjectType_returnsItself",
            "testLocalDateTimeToLocalTime",
            "testLocalDateTimeToLocalTime",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "testDouble",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "toInt_usingPrimitives",
            "testStringToByteBuffer",
            "testStringToByteBuffer",
            "testStringToByteBuffer",
            "testStringToByteBuffer",
            "testStringToByteBuffer",
            "testStringToByteBuffer",
            "testByteArrayToString",
            "testByteArrayToString",
            "testByteArrayToString",
            "testByteArrayToString",
            "testByteArrayToString",
            "testByteArrayToString",
            "testAtomicLong_fromBoolean",
            "testAtomicLong_fromBoolean",
            "testAtomicLong_fromBoolean",
            "testAtomicLong_fromBoolean",
            "testAtomicLong_fromBoolean",
            "testAtomicLong_fromBoolean",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalDate",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "testLongToLocalTime",
            "toInt_usingPrimitive_whenEmptyOrNullString_returnsZero",
            "toInt_usingPrimitive_whenEmptyOrNullString_returnsZero",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testBigDecimalToLocalDateTime",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch",
            "toShort_whenNotPrimitive_whenNull_returnsNull",
            "testLocalDateToLong",
            "testLocalDateToLong",
            "testLocalDateToAtomicLongAndBack",
            "testLocalDateToAtomicLongAndBack",
            "testLocalDateToAtomicLongAndBack",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "testCalendarToInstant",
            "toByte_withIllegalArguments",
            "toByte_withIllegalArguments",
            "toByte_withIllegalArguments",
            "toByte_withIllegalArguments",
            "toCharacter_whenTrue_withCustomOptions_returnsTrueCharacter",
            "toCharacter_whenTrue_withCustomOptions_returnsTrueCharacter",
            "toCharacter_whenTrue_withCustomOptions_returnsTrueCharacter",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLongToBigInteger",
            "testLocalDateTimeToLong",
            "testLocalDateTimeToLong",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testEmptyStringToType_whereTypeReturnsSpecificObject",
            "testLocalDateToDateAndBack",
            "testLocalDateToDateAndBack",
            "testLocalDateToDateAndBack",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalDate",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testInstantToLocalTime",
            "testEmptyStringToType_whereTypeIsEqualButNotSameAs",
            "testEmptyStringToType_whereTypeIsEqualButNotSameAs",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testInstantToBigDecimal",
            "testCharArrayToString",
            "testCharArrayToString",
            "testCharArrayToString",
            "testCharArrayToString",
            "testCharArrayToString",
            "testCharArrayToString",
            "testStringDateWithTimeZoneToLocalDateTime",
            "testStringDateWithTimeZoneToLocalDateTime",
            "testStringDateWithTimeZoneToLocalDateTime",
            "testStringDateWithTimeZoneToLocalDateTime",
            "testStringDateWithTimeZoneToLocalDateTime",
            "testStringDateWithTimeZoneToLocalDateTime",
            "testMapToCalendar",
            "testMapToCalendar",
            "testMapToCalendar",
            "testMapToCalendar",
            "testMapToCalendar",
            "testMapToCalendar",
            "testMapToCalendar",
            "testMapToCalendar",
            "testMapToCalendar",
            "testLocalDateToInstantAndBack",
            "testLocalDateToInstantAndBack",
            "testLocalDateToInstantAndBack",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "testZonedDateTimeToInstant",
            "toCharacter_whenFalse_withDefaultOptions_returnsCommonValue",
            "toCharacter_whenFalse_withDefaultOptions_returnsCommonValue",
            "toCharacter_whenFalse_withDefaultOptions_returnsCommonValue",
            "testAtomicLong_withIllegalArguments",
            "testAtomicLong_withIllegalArguments",
            "testAtomicLong_withIllegalArguments",
            "testAtomicLong_withIllegalArguments",
            "toByte_whenNull_andNotPrimitive_returnsNull",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime",
            "testInstantToZonedDateTime"
        ],
        "passed_test_cases_list": [
            "testSqlDateToString_h2Test0"
        ],
        "failure_info": {
            "toByte_whenEmpty_andNotPrimitive_returnsZero": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testBigIntegerToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateTimestampAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toLong_withBooleanParams_returnsCommonValues": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertString_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLong_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToBigInteger": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringNullAndEmpty": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToDouble": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toFloat_withBooleanArguments_returnsCommonValue": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toCharacter_whenTrue_withDefaultOptions_returnsCommonValue": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertToAtomicLong_whenNullString": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toShort_usingPrimitive_withNullAndEmptySource_returnsZero": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toShort_usingPrimitiveClass": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToAtomicLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToSqlDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toInt_withIllegalArguments_throwsException": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toShort_withIllegalArguments_throwsException": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testZonedDateTimeToCalendar": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toLong_whenNotPrimitive_andNull_returnsNull": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testAtomicLongToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testDateToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateZonedDateTimeAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateSqlDateAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testEpochMilliWithZoneId": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLongToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testAtomicInteger": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testBigDecimal": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateTimeToBigDecimal": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testDateToLocalDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testDateToLocalTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertToFloat_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toFloat": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toShort": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toByte_fromBoolean_isSameAsCommonValueObject": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToTimestamp": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toShort_withBooleanPrams_returnsCommonValue": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToBigDecimalAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "stringToClass": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToBigIntegerAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringToCharArray": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToCalendar": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testClassesThatReturnZero_whenConvertingFromNull": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertTCharacter_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toLong_usingPrimitives": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testZonedDateTimeToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toInt_whenNotPrimitive_andNullString_returnsNull": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toShort_whenNotPrimitive_whenEmptyString_returnsNull": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toByte": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testBigInteger": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testAtomicInteger_withBooleanTypes": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToLocalTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateTimeToBigInteger": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendar_roundTrip_withLocalDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testZonedDateTimeToLocalDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testZonedDateTimeToLocalTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toByte_whenNullOrEmpty_andCovnertingToPrimitive_returnsZero": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "conversionsWithPrecisionLoss_primitives": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertToAtomicLong_whenEmptyString": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testToBoolean_trueCases": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringDateWithTimeZoneToLocalDateTimeIncludeMillis": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToZonedDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testZonedDateTimeToLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testAtomicLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateTimeToAtomicLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConversions_whenClassTypeMatchesObjectType_stillCreatesNewObject": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toInt_fromBoolean_returnsCommonValue": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendar_roundTrip": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "conversionsWithPrecisionLoss_toAtomicLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testDateToInstant": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringToByteArray": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toShort_withBooleanPrams_usingPrimitive_returnsCommonValue": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toCharacter_whenFalse_withDefaultOptions_andObjectType_returnsCommonValue": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toFloat_objectType": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testDouble_ObjectType": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testBigInteger_withObjectsShouldBeSameAs": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateTimeToZonedDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToDouble": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testToBoolean_falseCases": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringDateWithTimeZoneToLocalDateTimeWithZone": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testTimestampToLocalDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toInt_whenNotPrimitive_andEmptyString_returnsZero": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testAtomicInteger_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testExtremeDateParams": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToDoubleAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneMatches": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toInt": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertToBigDecimal_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toCharacter_whenTrue_withDefaultOptions_andObjectType_returnsCommonValue": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toCharacter_ObjectType": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testSqlDateToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toByte_fromBoolean_usingPrimitive_isSameAsCommonValueObject": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toFloat_withBooleanArguments_returnsCommonValueWhenPrimitive": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateTimeToInstant": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToLocalDateTimeAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertLocalDateToLongAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToBigDecimal": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toCharacter_whenFalse_withCustomOptions_returnsTrueCharacter": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toLong_whenNotPrimitive_andEmptyString_returnsZero": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testSqlDateToLocalDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toByteUsingPrimitive": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLongToInstant": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toLong_whenPrimitive_andNullOrEmpty_returnsZero": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testBigDecimal_withObjectsThatShouldBeSameAs": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToFloat": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toCharacter": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertToBigInteger_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "conversionsWithPrecisionLoss_toAtomicInteger": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringParams": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToBigInteger": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToLocalDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToLocalTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringDateWithNoTimeZoneInformation": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConvertTCharacter_withNumberFormatExceptions": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testTimestampToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testDateToZonedDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testConversions_whenClassTypeMatchesObjectType_returnsItself": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateTimeToLocalTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testDouble": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toInt_usingPrimitives": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringToByteBuffer": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testByteArrayToString": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testAtomicLong_fromBoolean": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLongToLocalDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLongToLocalTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toInt_usingPrimitive_whenEmptyOrNullString_returnsZero": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testBigDecimalToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToLocalDateTime_whenCalendarTimeZoneDoesNotMatch": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toShort_whenNotPrimitive_whenNull_returnsNull": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToAtomicLongAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToInstant": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toByte_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toCharacter_whenTrue_withCustomOptions_returnsTrueCharacter": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCalendarToLocalDate_whenCalendarTimeZoneMatches": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLongToBigInteger": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateTimeToLong": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testEmptyStringToType_whereTypeReturnsSpecificObject": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToDateAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToLocalDate": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToLocalTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testEmptyStringToType_whereTypeIsEqualButNotSameAs": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToBigDecimal": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testCharArrayToString": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testStringDateWithTimeZoneToLocalDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testMapToCalendar": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testLocalDateToInstantAndBack": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testZonedDateTimeToInstant": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toCharacter_whenFalse_withDefaultOptions_returnsCommonValue": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testAtomicLong_withIllegalArguments": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "toByte_whenNull_andNotPrimitive_returnsNull": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions",
            "testInstantToZonedDateTime": "java.lang.NoClassDefFoundError: org/assertj/core/api/Assertions"
        }
    }
}