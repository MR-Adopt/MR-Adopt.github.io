
Thanks for using JUnit! Support its development at https://junit.org/sponsoring

[36mâ•·[0m
[36mâ”œâ”€[0m [36mJUnit Jupiter[0m [32mâœ”[0m
[36mâ”‚  â””â”€[0m [36mFilterTest_testGetNewEvents_h3Test3[0m [32mâœ”[0m
[36mâ”‚     â””â”€[0m [31mtestGetNewEvents_h3Test3()[0m [31mâœ˜[0m [31mjava.lang.NullPointerException[0m
[36mâ”œâ”€[0m [36mJUnit Vintage[0m [32mâœ”[0m
[36mâ””â”€[0m [36mJUnit Platform Suite[0m [32mâœ”[0m

Failures (1):
  JUnit Jupiter:FilterTest_testGetNewEvents_h3Test3:testGetNewEvents_h3Test3()
    MethodSource [className = 'org.ethereum.rpc.FilterTest_testGetNewEvents_h3Test3', methodName = 'testGetNewEvents_h3Test3', methodParameterTypes = '']
    => java.lang.NullPointerException
       org.ethereum.rpc.Filter.lambda$getNewEvents$0(Filter.java:49)
       java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:195)
       java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)
       java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
       java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
       java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:913)
       java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
       java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:578)
       org.ethereum.rpc.Filter.getNewEvents(Filter.java:49)
       org.ethereum.rpc.FilterTest_testGetNewEvents_h3Test3.testGetNewEvents_h3Test3(FilterTest_testGetNewEvents_h3Test3.java:53)
       [...]

Test run finished after 173 ms
[         4 containers found      ]
[         0 containers skipped    ]
[         4 containers started    ]
[         0 containers aborted    ]
[         4 containers successful ]
[         0 containers failed     ]
[         1 tests found           ]
[         0 tests skipped         ]
[         1 tests started         ]
[         0 tests aborted         ]
[         0 tests successful      ]
[         1 tests failed          ]


WARNING: Delegated to the 'execute' command.
         This behaviour has been deprecated and will be removed in a future release.
         Please use the 'execute' command directly.
CMD: cd /ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/ ; /ssddata1/cxubl/software/zulu_jdks/zulu11.62.17-ca-jdk11.0.18-linux_x64/bin/java -XX:ActiveProcessorCount=10 -jar /ssddata1/cxubl/software/junit/junit-platform-console-standalone-1.10.0.jar --class-path=./:./rskj-core/build/classes/java/main/:./rskj-core/build/classes/java/test/:/ssddata1/cxubl/software/junit/junit-4.13.2.jar:/ssddata1/cxubl/software/junit/junit-jupiter-api-5.8.2.jar:/ssddata1/cxubl/software/junit/hamcrest-core-1.3.jar:/ssddata1/cxubl/.m2/repository/org/slf4j/slf4j-api/2.0.0/slf4j-api-2.0.0.jar:/ssddata1/cxubl/.m2/repository/org/apache/logging/log4j/log4j-api/2.1/log4j-api-2.1.jar:/ssddata1/cxubl/.m2/repository/com/google/guava/guava/33.0.0-jre/guava-33.0.0-jre.jar:/ssddata1/cxubl/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.4.0/jackson-databind-2.4.0.jar:/ssddata1/cxubl/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.1/jackson-core-2.12.1.jar:/ssddata1/cxubl/.m2/repository/org/springframework/spring-test/5.3.26/spring-test-5.3.26.jar:/ssddata1/cxubl/data/ITrans/projects/thingsboard__castle__thingsboard/dao/target/dependency/commons-logging-1.2.jar:/ssddata1/cxubl/.m2/repository/org/springframework/spring-core/5.3.2/spring-core-5.3.26.jar:arex-instrumentation-api/target/dependency/jackson-annotations-2.13.1.jar:arex-instrumentation-api/target/dependency/gson-2.10.1.jar:misc/extra/target/dependency/vecmath-1.5.2.jar:/ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/ITrans/processed_GT_only/:/ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/ITrans/processed_MTCITrans_only/:/ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/ITrans/generated_ITrans/:/ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/ITrans/generated_inputs/:/ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/ITrans/generated_inputs/g3:/ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/ITrans/generated_inputs/ --select-class=org.ethereum.rpc.FilterTest_testGetNewEvents_h3Test3 > /ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/AutoMR/test_exe/org.ethereum.rpc.FilterTest_testGetNewEvents_h3Test3.log 2>&1
file path: 
/ssddata1/cxubl/data/ITrans/projects/rsksmart__castle__rskj/ITrans/generated_inputs/g3/org/ethereum/rpc/FilterTest_testGetNewEvents_h3Test3.java
file content: 
/*
 * This file is part of RskJ
 * Copyright (C) 2023 RSK Labs Ltd.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package org.ethereum.rpc;

import org.ethereum.rpc.Filter;
import org.ethereum.rpc.Filter.*;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import java.util.List;
import java.util.Arrays;
import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotSame;
import static org.junit.jupiter.api.Assertions.assertTrue;

class FilterTest_testGetNewEvents_h3Test3 {

    Filter filter;

    @BeforeEach
    void setUp() {
        filter = new Filter();
    }

    @Test
    void testGetNewEvents_h3Test3() {
    Filter.FilterEvent mockEvent = new FilterEventMock();
    Filter filter = new Filter();
    filter.add(mockEvent);
    filter.add(null);
    Filter.FilterEvent mockEvent2 = new FilterEventMock();
    Filter filter2 = new Filter();
    filter2.add(mockEvent2);
    filter2.add(null);
        filter.add(mockEvent);
        filter2.add(mockEvent2);
        Object[] events1 = filter2.getNewEvents();
        assertArrayEquals(new Object[] { mockEvent.getJsonEventObject() }, events1);
    }

    static class FilterEventMock implements Filter.FilterEvent {

        @Override
        public Object getJsonEventObject() {
            return MockObject;
        }
    }
}


