/*
 * Copyright (C) 2020 The zfoo Authors
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 * on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and limitations under the License.
 */

package com.zfoo.net.util;

import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;

import java.io.IOException;
import java.net.InetAddress;

/**
 * @author godotg
 */
public class NetUtilsTest {

    @Test
    public void localhostTest() {
        var localHostStr = NetUtils.getLocalhostStr();
        var localHost = NetUtils.getLocalhost();
        Assert.assertEquals(localHostStr, localHost.getHostAddress());
    }

    @Test
    public void localhostTest_h() {
        String localHostStr = NetUtils.getLocalhostStr();
        InetAddress localHost = NetUtils.getLocalhost();
        // localHost.getLocalHost();
        Assert.assertEquals(localHostStr, localHost.getHostAddress());
    }

    @Test
    public void ipv4Test() {
        var ipLong = NetUtils.ipv4ToLong(NetUtils.LOCAL_LOOPBACK_IP);
        var ipStr = NetUtils.longToIpv4(ipLong);
        Assert.assertEquals(ipStr, NetUtils.LOCAL_LOOPBACK_IP);
    }

    @Test
    public void ipv4Test_h() {
        String ipStr1 = NetUtils.LOCAL_LOOPBACK_IP;
        long ipLong = NetUtils.ipv4ToLong(ipStr1);
        long ipLong2 = 127000000001L;
        String ipStr2 = NetUtils.longToIpv4(ipLong2);
        Assert.assertEquals(ipStr2, ipStr1);
    }

    public static long inputTransformation_ipv4Test(String ipStr1) {
        String ipStr = ipStr1;
        long ipLong = NetUtils.ipv4ToLong(ipStr);
        return ipLong;
    }


    @Test
    public void ipv4Test_IT() {
        String ipStr1 = NetUtils.LOCAL_LOOPBACK_IP;
        long ipLong = NetUtils.ipv4ToLong(ipStr1);
        long ipLong2 = inputTransformation_ipv4Test(ipStr1);
        String ipStr2 = NetUtils.longToIpv4(ipLong2);
        Assert.assertEquals(ipStr2, ipStr1);
    }

    @Test
    public void isInnerIpTest() {
        Assert.assertTrue(NetUtils.isInnerIP(NetUtils.LOCAL_LOOPBACK_IP));
    }
}
